<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
chan infra1;
chan infra2;
chan cardIn;
chan eject;
chan gate2Open;
chan req;//Request channel

clock timeInSas;

const int SAS_TIMER = 10;
const int N_USERS = 2;
int reqID;
int turn;//The ID of the user whose it's turn.

int gateConf = 1;//Binary: g2g1 =&gt; 01 = gate 2 closed &amp;&amp; gate 1 open, 00 both closed, 10 = gate 2 open &amp;&amp; gate 1 closed.

int userCard;</declaration><template><name x="8" y="8">User</name><declaration>// Place local declarations here.

clock x;
const int userID = 1;</declaration><location id="id0" x="-952" y="-264"></location><location id="id1" x="-1288" y="-32"><name x="-1328" y="-64">before_sas</name></location><location id="id2" x="-728" y="32"><name x="-738" y="2">FAIL</name><urgent/></location><location id="id3" x="-584" y="-176" color="#00ff00"><name x="-608" y="-208">after_sas</name><urgent/></location><location id="id4" x="-792" y="-80"><name x="-810" y="-110">in_sas</name></location><location id="id5" x="-1056" y="-56"><name x="-1104" y="-96">want_in</name></location><init ref="id1"/><transition controllable="false" action=""><source ref="id2"/><target ref="id1"/><nail x="-728" y="96"/><nail x="-1272" y="96"/></transition><transition controllable="false" action=""><source ref="id0"/><target ref="id4"/><label kind="assignment" x="-968" y="-112">userCard = 0</label><nail x="-952" y="-120"/><nail x="-888" y="-120"/></transition><transition controllable="false" action=""><source ref="id0"/><target ref="id4"/><label kind="assignment" x="-936" y="-200">userCard = 1</label><nail x="-952" y="-184"/><nail x="-856" y="-184"/><nail x="-856" y="-128"/></transition><transition controllable="false" action=""><source ref="id5"/><target ref="id0"/><label kind="guard" x="-1024" y="-304">gateConf == 1 &amp;&amp; turn == userID</label><label kind="synchronisation" x="-1024" y="-289">infra1!</label><nail x="-1016" y="-56"/><nail x="-1016" y="-264"/></transition><transition controllable="false" action=""><source ref="id3"/><target ref="id1"/><nail x="-560" y="-176"/><nail x="-560" y="104"/><nail x="-1288" y="104"/></transition><transition controllable="false" action=""><source ref="id4"/><target ref="id1"/><label kind="synchronisation" x="-1128" y="0">infra1!</label><nail x="-1000" y="16"/><nail x="-1192" y="16"/></transition><transition controllable="false" action=""><source ref="id4"/><target ref="id1"/><label kind="synchronisation" x="-1104" y="56">eject?</label><nail x="-984" y="80"/><nail x="-1216" y="80"/></transition><transition controllable="false" action=""><source ref="id1"/><target ref="id5"/><label kind="synchronisation" x="-1248" y="-103">req!</label><label kind="assignment" x="-1248" y="-88">reqID = userID</label><nail x="-1184" y="-56"/></transition><transition controllable="false" action=""><source ref="id4"/><target ref="id3"/><label kind="guard" x="-720" y="-104">gateConf == 2</label><label kind="synchronisation" x="-696" y="-120">infra2!</label><nail x="-648" y="-80"/></transition><transition action=""><source ref="id4"/><target ref="id2"/><label kind="guard" x="-784" y="-24">timeInSas &gt;= SAS_TIMER</label><nail x="-792" y="0"/></transition><transition controllable="false" action=""><source ref="id4"/><target ref="id4"/><label kind="synchronisation" x="-816" y="-176">cardIn!</label><nail x="-832" y="-104"/><nail x="-840" y="-152"/><nail x="-736" y="-152"/><nail x="-744" y="-104"/></transition></template><template><name>Sas</name><declaration>clock x;

int queue[N_USERS];
int newID;//Requester's ID

void init_queue()
{	
	int i;
	for(i = 0;i&lt;N_USERS;++i) {
		queue[i] = 0;
	}
}

//Add a new id at the end of the queue
void addInQueue(int id) 
{
	int i;
	int set = 0;
	for(i=0;i&lt;N_USERS &amp;&amp; set==0;++i) {
		if(queue[i] == 0) {
			queue[i] = id;
			set = 1;
		}
	}
	turn = queue[0];//Update if necessary
}

//Shift each user one place forward in the queue
void shiftQueue()
{
	int i;
	for(i=0;i&lt;N_USERS-1;++i) {
		queue[i] = queue[i+1];
	}
	queue[N_USERS-1] = 0;//Last place in the queue is available.
	turn = queue[0];//Update if necessary
}</declaration><location id="id6" x="-872" y="-64"><name x="-882" y="-94">init_sas</name><urgent/></location><location id="id7" x="-128" y="56"><name x="-144" y="72">process_card</name><urgent/></location><location id="id8" x="-432" y="-72"><name x="-480" y="-128">handling_user</name><label kind="invariant" x="-496" y="-112">timeInSas &lt;= SAS_TIMER</label><label kind="comments">The decision to eject the user comes from the SAS by sending a sync signal.</label></location><location id="id9" x="-688" y="-64"><name x="-736" y="-80">idle</name></location><init ref="id6"/><transition action=""><source ref="id8"/><target ref="id8"/><label kind="synchronisation" x="-240" y="-144">req?</label><label kind="assignment" x="-280" y="-176">newID = reqID,
addInQueue(newID)</label><nail x="-296" y="-64"/><nail x="-152" y="-64"/><nail x="-152" y="-144"/><nail x="-280" y="-144"/><nail x="-280" y="-80"/></transition><transition action=""><source ref="id9"/><target ref="id9"/><label kind="synchronisation" x="-752" y="-216">req?</label><label kind="assignment" x="-800" y="-256">newID = reqID,
addInQueue(newID)</label><nail x="-760" y="-136"/><nail x="-800" y="-224"/><nail x="-680" y="-224"/><nail x="-704" y="-96"/></transition><transition action=""><source ref="id6"/><target ref="id9"/><label kind="assignment" x="-848" y="-56">init_queue()</label></transition><transition action=""><source ref="id8"/><target ref="id9"/><label kind="synchronisation" x="-648" y="-119">infra1?</label><label kind="assignment" x="-648" y="-104">gateConf=1</label><nail x="-552" y="-72"/><nail x="-552" y="-128"/><nail x="-664" y="-128"/><nail x="-680" y="-88"/></transition><transition action=""><source ref="id8"/><target ref="id9"/><label kind="guard" x="-640" y="-15">timeInSas == SAS_TIMER</label><label kind="synchronisation" x="-640" y="0">eject!</label><label kind="assignment" x="-640" y="15">gateConf = 1</label><nail x="-504" y="-24"/><nail x="-616" y="-24"/></transition><transition action=""><source ref="id9"/><target ref="id8"/><label kind="synchronisation" x="-632" y="-200">infra1?</label><label kind="assignment" x="-672" y="-184">timeInSas = 0,
gateConf = 0, shiftQueue()</label><nail x="-688" y="-96"/><nail x="-672" y="-152"/><nail x="-528" y="-152"/><nail x="-528" y="-96"/></transition><transition action=""><source ref="id8"/><target ref="id9"/><label kind="synchronisation" x="-536" y="136">infra2?</label><label kind="assignment" x="-552" y="120">gateConf = 1</label><nail x="-432" y="112"/><nail x="-688" y="112"/><nail x="-688" y="72"/><nail x="-688" y="8"/></transition><transition action=""><source ref="id7"/><target ref="id8"/><label kind="guard" x="-240" y="-48">userCard == 0</label><label kind="assignment" x="-240" y="-32">gateConf = 0</label><label kind="comments">Card is not ok.</label><nail x="-144" y="-16"/><nail x="-248" y="-16"/></transition><transition action=""><source ref="id7"/><target ref="id8"/><label kind="guard" x="-256" y="80">userCard == 1</label><label kind="assignment" x="-256" y="64">gateConf = 2</label><label kind="comments">Card is ok.</label><nail x="-248" y="56"/><nail x="-368" y="0"/></transition><transition action=""><source ref="id8"/><target ref="id7"/><label kind="synchronisation" x="-248" y="8">cardIn?</label><nail x="-264" y="24"/><nail x="-168" y="24"/></transition></template><template><name x="8" y="8">User2</name><declaration>// Place local declarations here.

clock x;
const int userID = 2;</declaration><location id="id10" x="-1232" y="-48"><name x="-1304" y="-80">before_sas</name></location><location id="id11" x="-712" y="32"><name x="-722" y="2">FAIL</name></location><location id="id12" x="-584" y="-176" color="#00ff00"><name x="-608" y="-208">after_sas</name><urgent/></location><location id="id13" x="-792" y="-80"><name x="-810" y="-110">in_sas</name></location><location id="id14" x="-1056" y="-56"><name x="-1096" y="-96">want_in</name></location><init ref="id10"/><transition controllable="false" action=""><source ref="id12"/><target ref="id10"/><nail x="-528" y="-176"/><nail x="-528" y="128"/><nail x="-1232" y="128"/></transition><transition controllable="false" action=""><source ref="id13"/><target ref="id10"/><label kind="synchronisation" x="-1080" y="-16">infra1!</label><nail x="-944" y="-24"/><nail x="-1144" y="-16"/></transition><transition controllable="false" action=""><source ref="id13"/><target ref="id10"/><label kind="synchronisation" x="-1048" y="32">eject?</label><nail x="-840" y="16"/><nail x="-1144" y="40"/></transition><transition controllable="false" action=""><source ref="id10"/><target ref="id14"/><label kind="synchronisation" x="-1248" y="-120">req!</label><label kind="assignment" x="-1248" y="-105">reqID = userID</label><nail x="-1176" y="-80"/></transition><transition controllable="false" action=""><source ref="id13"/><target ref="id12"/><label kind="guard" x="-720" y="-104">gateConf == 2</label><label kind="synchronisation" x="-696" y="-120">infra2!</label><nail x="-648" y="-80"/></transition><transition action=""><source ref="id13"/><target ref="id11"/><label kind="guard" x="-776" y="-32">timeInSas &gt;= SAS_TIMER</label><nail x="-792" y="8"/></transition><transition controllable="false" action=""><source ref="id13"/><target ref="id13"/><label kind="synchronisation" x="-816" y="-176">cardIn!</label><nail x="-832" y="-104"/><nail x="-840" y="-152"/><nail x="-736" y="-152"/><nail x="-744" y="-104"/></transition><transition controllable="false" action=""><source ref="id14"/><target ref="id13"/><label kind="guard" x="-1040" y="-224">gateConf == 1 &amp;&amp; turn == userID</label><label kind="synchronisation" x="-1016" y="-248">infra1!</label><nail x="-1000" y="-80"/><nail x="-968" y="-200"/><nail x="-880" y="-200"/><nail x="-864" y="-88"/></transition></template><system>// Place template instantiations here.

// List one or more processes to be composed into a system.
system User, Sas, User2;</system></nta>